"""Initial database structure

Revision ID: 584a021955b3
Revises: 
Create Date: 2025-05-30 00:50:09.539549

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '584a021955b3'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('booking_items', schema=None) as batch_op:
        batch_op.drop_constraint(batch_op.f('booking_items_service_id_fkey'), type_='foreignkey')
        batch_op.drop_constraint(batch_op.f('booking_items_booking_id_fkey'), type_='foreignkey')
        batch_op.create_foreign_key(None, 'services', ['service_id'], ['id'])
        batch_op.create_foreign_key(None, 'bookings', ['booking_id'], ['id'])

    with op.batch_alter_table('booking_promotions', schema=None) as batch_op:
        batch_op.drop_constraint(batch_op.f('booking_promotions_promotion_id_fkey'), type_='foreignkey')
        batch_op.drop_constraint(batch_op.f('booking_promotions_booking_id_fkey'), type_='foreignkey')
        batch_op.create_foreign_key(None, 'bookings', ['booking_id'], ['id'])
        batch_op.create_foreign_key(None, 'promotions', ['promotion_id'], ['id'])

    with op.batch_alter_table('bookings', schema=None) as batch_op:
        batch_op.alter_column('status',
               existing_type=postgresql.ENUM('pending', 'confirmed', 'in_progress', 'completed', 'cancelled', name='booking_status'),
               type_=sa.String(length=20),
               existing_nullable=True,
               existing_server_default=sa.text("'pending'::booking_status"))
        batch_op.alter_column('payment_status',
               existing_type=postgresql.ENUM('unpaid', 'paid', name='payment_status'),
               type_=sa.String(length=20),
               existing_nullable=True,
               existing_server_default=sa.text("'unpaid'::payment_status"))
        batch_op.alter_column('payment_method',
               existing_type=postgresql.ENUM('cash', 'bank_transfer', 'credit_card', 'momo', 'zalopay', name='payment_method'),
               type_=sa.String(length=20),
               existing_nullable=True)
        batch_op.drop_constraint(batch_op.f('bookings_user_id_fkey'), type_='foreignkey')
        batch_op.drop_constraint(batch_op.f('bookings_staff_id_fkey'), type_='foreignkey')
        batch_op.drop_constraint(batch_op.f('bookings_service_id_fkey'), type_='foreignkey')
        batch_op.create_foreign_key(None, 'users', ['staff_id'], ['id'])
        batch_op.create_foreign_key(None, 'services', ['service_id'], ['id'])
        batch_op.create_foreign_key(None, 'users', ['user_id'], ['id'])

    with op.batch_alter_table('notifications', schema=None) as batch_op:
        batch_op.drop_constraint(batch_op.f('notifications_user_id_fkey'), type_='foreignkey')
        batch_op.create_foreign_key(None, 'users', ['user_id'], ['id'])

    with op.batch_alter_table('payments', schema=None) as batch_op:
        batch_op.alter_column('payment_method',
               existing_type=postgresql.ENUM('cash', 'bank_transfer', 'credit_card', 'momo', 'zalopay', name='payment_method'),
               type_=sa.String(length=20),
               existing_nullable=False)
        batch_op.alter_column('status',
               existing_type=postgresql.ENUM('pending', 'completed', 'failed', 'refunded', name='transaction_status'),
               type_=sa.String(length=20),
               existing_nullable=True,
               existing_server_default=sa.text("'pending'::transaction_status"))
        batch_op.drop_constraint(batch_op.f('payments_booking_id_fkey'), type_='foreignkey')
        batch_op.create_foreign_key(None, 'bookings', ['booking_id'], ['id'])

    with op.batch_alter_table('promotions', schema=None) as batch_op:
        batch_op.alter_column('discount_type',
               existing_type=postgresql.ENUM('percentage', 'fixed', name='discount_type'),
               type_=sa.String(length=20),
               existing_nullable=False)
        batch_op.alter_column('status',
               existing_type=postgresql.ENUM('active', 'inactive', name='service_status'),
               type_=sa.String(length=20),
               existing_nullable=True,
               existing_server_default=sa.text("'active'::service_status"))

    with op.batch_alter_table('reviews', schema=None) as batch_op:
        batch_op.drop_constraint(batch_op.f('reviews_user_id_fkey'), type_='foreignkey')
        batch_op.drop_constraint(batch_op.f('reviews_service_id_fkey'), type_='foreignkey')
        batch_op.drop_constraint(batch_op.f('reviews_booking_id_fkey'), type_='foreignkey')
        batch_op.drop_constraint(batch_op.f('reviews_staff_id_fkey'), type_='foreignkey')
        batch_op.create_foreign_key(None, 'bookings', ['booking_id'], ['id'])
        batch_op.create_foreign_key(None, 'users', ['staff_id'], ['id'])
        batch_op.create_foreign_key(None, 'services', ['service_id'], ['id'])
        batch_op.create_foreign_key(None, 'users', ['user_id'], ['id'])

    with op.batch_alter_table('service_categories', schema=None) as batch_op:
        batch_op.alter_column('status',
               existing_type=postgresql.ENUM('active', 'inactive', name='service_status'),
               type_=sa.String(length=20),
               existing_nullable=True,
               existing_server_default=sa.text("'active'::service_status"))

    with op.batch_alter_table('services', schema=None) as batch_op:
        batch_op.alter_column('category_id',
               existing_type=sa.UUID(),
               nullable=False)
        batch_op.alter_column('status',
               existing_type=postgresql.ENUM('active', 'inactive', name='service_status'),
               type_=sa.String(length=20),
               existing_nullable=True,
               existing_server_default=sa.text("'active'::service_status"))
        batch_op.drop_constraint(batch_op.f('services_category_id_fkey'), type_='foreignkey')
        batch_op.create_foreign_key(None, 'service_categories', ['category_id'], ['id'])

    with op.batch_alter_table('staff_schedules', schema=None) as batch_op:
        batch_op.alter_column('status',
               existing_type=postgresql.ENUM('available', 'booked', 'off', name='schedule_status'),
               type_=sa.String(length=20),
               existing_nullable=True,
               existing_server_default=sa.text("'available'::schedule_status"))
        batch_op.drop_constraint(batch_op.f('staff_schedules_staff_id_fkey'), type_='foreignkey')
        batch_op.create_foreign_key(None, 'users', ['staff_id'], ['id'])

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('staff_schedules', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key(batch_op.f('staff_schedules_staff_id_fkey'), 'users', ['staff_id'], ['id'], ondelete='CASCADE')
        batch_op.alter_column('status',
               existing_type=sa.String(length=20),
               type_=postgresql.ENUM('available', 'booked', 'off', name='schedule_status'),
               existing_nullable=True,
               existing_server_default=sa.text("'available'::schedule_status"))

    with op.batch_alter_table('services', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key(batch_op.f('services_category_id_fkey'), 'service_categories', ['category_id'], ['id'], ondelete='SET NULL')
        batch_op.alter_column('status',
               existing_type=sa.String(length=20),
               type_=postgresql.ENUM('active', 'inactive', name='service_status'),
               existing_nullable=True,
               existing_server_default=sa.text("'active'::service_status"))
        batch_op.alter_column('category_id',
               existing_type=sa.UUID(),
               nullable=True)

    with op.batch_alter_table('service_categories', schema=None) as batch_op:
        batch_op.alter_column('status',
               existing_type=sa.String(length=20),
               type_=postgresql.ENUM('active', 'inactive', name='service_status'),
               existing_nullable=True,
               existing_server_default=sa.text("'active'::service_status"))

    with op.batch_alter_table('reviews', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key(batch_op.f('reviews_staff_id_fkey'), 'users', ['staff_id'], ['id'], ondelete='SET NULL')
        batch_op.create_foreign_key(batch_op.f('reviews_booking_id_fkey'), 'bookings', ['booking_id'], ['id'], ondelete='CASCADE')
        batch_op.create_foreign_key(batch_op.f('reviews_service_id_fkey'), 'services', ['service_id'], ['id'], ondelete='CASCADE')
        batch_op.create_foreign_key(batch_op.f('reviews_user_id_fkey'), 'users', ['user_id'], ['id'], ondelete='CASCADE')

    with op.batch_alter_table('promotions', schema=None) as batch_op:
        batch_op.alter_column('status',
               existing_type=sa.String(length=20),
               type_=postgresql.ENUM('active', 'inactive', name='service_status'),
               existing_nullable=True,
               existing_server_default=sa.text("'active'::service_status"))
        batch_op.alter_column('discount_type',
               existing_type=sa.String(length=20),
               type_=postgresql.ENUM('percentage', 'fixed', name='discount_type'),
               existing_nullable=False)

    with op.batch_alter_table('payments', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key(batch_op.f('payments_booking_id_fkey'), 'bookings', ['booking_id'], ['id'], ondelete='CASCADE')
        batch_op.alter_column('status',
               existing_type=sa.String(length=20),
               type_=postgresql.ENUM('pending', 'completed', 'failed', 'refunded', name='transaction_status'),
               existing_nullable=True,
               existing_server_default=sa.text("'pending'::transaction_status"))
        batch_op.alter_column('payment_method',
               existing_type=sa.String(length=20),
               type_=postgresql.ENUM('cash', 'bank_transfer', 'credit_card', 'momo', 'zalopay', name='payment_method'),
               existing_nullable=False)

    with op.batch_alter_table('notifications', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key(batch_op.f('notifications_user_id_fkey'), 'users', ['user_id'], ['id'], ondelete='CASCADE')

    with op.batch_alter_table('bookings', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key(batch_op.f('bookings_service_id_fkey'), 'services', ['service_id'], ['id'], ondelete='CASCADE')
        batch_op.create_foreign_key(batch_op.f('bookings_staff_id_fkey'), 'users', ['staff_id'], ['id'], ondelete='SET NULL')
        batch_op.create_foreign_key(batch_op.f('bookings_user_id_fkey'), 'users', ['user_id'], ['id'], ondelete='CASCADE')
        batch_op.alter_column('payment_method',
               existing_type=sa.String(length=20),
               type_=postgresql.ENUM('cash', 'bank_transfer', 'credit_card', 'momo', 'zalopay', name='payment_method'),
               existing_nullable=True)
        batch_op.alter_column('payment_status',
               existing_type=sa.String(length=20),
               type_=postgresql.ENUM('unpaid', 'paid', name='payment_status'),
               existing_nullable=True,
               existing_server_default=sa.text("'unpaid'::payment_status"))
        batch_op.alter_column('status',
               existing_type=sa.String(length=20),
               type_=postgresql.ENUM('pending', 'confirmed', 'in_progress', 'completed', 'cancelled', name='booking_status'),
               existing_nullable=True,
               existing_server_default=sa.text("'pending'::booking_status"))

    with op.batch_alter_table('booking_promotions', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key(batch_op.f('booking_promotions_booking_id_fkey'), 'bookings', ['booking_id'], ['id'], ondelete='CASCADE')
        batch_op.create_foreign_key(batch_op.f('booking_promotions_promotion_id_fkey'), 'promotions', ['promotion_id'], ['id'], ondelete='CASCADE')

    with op.batch_alter_table('booking_items', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key(batch_op.f('booking_items_booking_id_fkey'), 'bookings', ['booking_id'], ['id'], ondelete='CASCADE')
        batch_op.create_foreign_key(batch_op.f('booking_items_service_id_fkey'), 'services', ['service_id'], ['id'], ondelete='CASCADE')

    # ### end Alembic commands ###
